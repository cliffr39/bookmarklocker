<?xml version="1.0" encoding="utf-8"?>
<!-- AndroidManifest.xml: The manifest file for the Bookmark Locker application.
     It declares the application's components (activities, services, etc.), permissions,
     and other essential metadata. It links to our main theme.
     In Step 3, we added an intent-filter for sharing URLs.
     In Step 5, we add permissions for reading and writing external storage for backup/restore. -->
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    package="com.bookmarklocker">

    <!-- Permissions for reading and writing to external storage -->
    <!-- READ_EXTERNAL_STORAGE is deprecated for API 33+, but kept for backward compatibility if minSdk < 33 -->
    <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE" android:maxSdkVersion="32" />
    <!-- WRITE_EXTERNAL_STORAGE is deprecated for API 29+, replaced by scoped storage, but needed for targetSdk < 29 -->
    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" android:maxSdkVersion="28" />

    <!-- For API 29 (Android 10) and above, we use scoped storage, so we don't need WRITE_EXTERNAL_STORAGE
         if we're only writing to app-specific directories or Downloads.
         However, for Downloads folder access, we rely on the MediaStore API or SAF, which don't require explicit permissions
         like WRITE_EXTERNAL_STORAGE for saving (only for reading others' files).
         For simplicity and broader compatibility (especially below Android 10 and if needing broader access), we keep the above.
         For targeting Android 10 (API 29) and above, the following is often sufficient for direct file access:
         android:requestLegacyExternalStorage="true" in application tag (not recommended long term)
         OR
         Using MediaStore/SAF, which is the preferred way and doesn't require these permissions for saving to Downloads.
         For this app, we'll use SAF, but the manifest permissions are good to declare for clarity/fallback.
    -->


    <application
        android:allowBackup="true"
        android:dataExtractionRules="@xml/data_extraction_rules"
        android:fullBackupContent="@xml/backup_rules"
        android:icon="@mipmap/ic_launcher"
        android:label="@string/app_name"
        android:roundIcon="@mipmap/ic_launcher_round"
        android:supportsRtl="true"
        android:theme="@style/Theme.BookmarkLocker"
        tools:targetApi="31">

        <!-- Ensure requestLegacyExternalStorage is NOT set to true as we'll use SAF -->
        <!-- android:requestLegacyExternalStorage="false" -->

        <activity
            android:name=".MainActivity"
            android:exported="true"
            android:screenOrientation="portrait"
            tools:ignore="LockedOrientationActivity">
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />
                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
            <!-- Intent filter for receiving shared text/links -->
            <intent-filter>
                <action android:name="android.intent.action.SEND" />
                <category android:name="android.intent.category.DEFAULT" />
                <data android:mimeType="text/plain" />
                <data android:mimeType="text/html" />
            </intent-filter>
        </activity>
    </application>

</manifest>
